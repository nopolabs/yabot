<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters type="collection">
        <parameter key="yabot.config" type="collection">
            <parameter key="connection_monitor.interval">10</parameter>
        </parameter>
        <parameter key="storage.dir">storage</parameter>
        <parameter key="log.file">logs/yabot.log</parameter>
        <parameter key="log.level">debug</parameter>
        <parameter key="log.name">yabot</parameter>
        <parameter key="guzzle.config" type="collection">
            <parameter key="timeout">5</parameter>
        </parameter>
        <parameter key="slack.client.config" type="collection">
        </parameter>
    </parameters>

    <services>
        <service id="yabot" class="Nopolabs\Yabot\Yabot">
            <argument type="service" id="logger" />
            <argument type="service" id="event.loop" />
            <argument type="service" id="slack.client" />
            <argument type="service" id="message.factory" />
            <argument type="service" id="plugin.manager" />
            <argument>%yabot.config%</argument>
        </service>

        <service id="plugin.manager" class="Nopolabs\Yabot\Plugin\PluginManager">
            <argument type="service" id="logger" />
        </service>

        <service id="storage" class="Nopolabs\Yabot\Storage\FileStorage">
            <argument>%storage.dir%</argument>
        </service>

        <service id="log.handler" class="Monolog\Handler\StreamHandler">
            <argument>%log.file%</argument>
            <argument>%log.level%</argument>
        </service>

        <service id="logger" class="Monolog\Logger">
            <argument>%log.name%</argument>
            <call method="pushHandler">
                <argument type="service" id="log.handler" />
            </call>
        </service>

        <service id="event.loop" class="React\EventLoop\LoopInterface">
            <factory class="React\EventLoop\Factory" method="create" />
        </service>

        <service id="guzzle.factory" class="Nopolabs\Yabot\Guzzle\GuzzleFactory">
            <argument type="service" id="event.loop" />
            <argument type="service" id="logger" />
        </service>

        <service id="guzzle.client" class="GuzzleHttp\Client">
            <factory service="guzzle.factory" method="newClient" />
            <argument>%guzzle.config%</argument>
        </service>

        <service id="guzzle" class="Nopolabs\Yabot\Guzzle\Guzzle">
            <argument type="service" id="guzzle.client" />
            <argument type="service" id="logger" />
        </service>

        <service id="slack.realTimeClient" class="Slack\RealTimeClient">
            <argument type="service" id="event.loop" />
            <argument type="service" id="guzzle.client" />
            <argument type="service" id="logger" />
            <call method="setToken">
                <argument>%slack.token%</argument>
            </call>
        </service>

        <service id="slack.client" class="Nopolabs\Yabot\Slack\Client">
            <argument type="service" id="slack.realTimeClient" />
            <argument type="service" id="users" />
            <argument type="service" id="bots" />
            <argument type="service" id="channels" />
            <argument>%slack.client.config%</argument>
            <argument type="service" id="logger" />
       </service>

        <service id="users" class="Nopolabs\Yabot\Slack\Users" />

        <service id="bots" class="Nopolabs\Yabot\Slack\Bots" />

        <service id="channels" class="Nopolabs\Yabot\Slack\Channels" />

        <service id="message.factory" class="Nopolabs\Yabot\Message\MessageFactory">
            <argument type="service" id="slack.client" />
            <argument type="service" id="logger" />
        </service>
    </services>

</container>